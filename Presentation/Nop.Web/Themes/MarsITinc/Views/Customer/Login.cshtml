@model LoginModel
@using Nop.Core
@using Nop.Core.Domain.Customers

@inject IWebHelper webHelper
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);
    //page class
    Html.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register", new { returnUrl = this.Context.Request.Query["returnUrl"] }, webHelper.CurrentRequestProtocol);
}
<div class="page login-page">
    <div class="page-title">
        <h1>@T("Account.Login.Welcome")</h1>
    </div>
    @await Html.PartialAsync("_ExternalAuthentication.Errors")
    <div class="page-body">
        <div class="customer-blocks">
            <div class="row">
                <div class="col-12 col-md-6 mb-5">
                    @if (Model.CheckoutAsGuest)
                    {
                        <div class="new-wrapper checkout-as-guest-or-register-block card">
                            <div class="card-header">
                                <h5 class="mb-0">@T("Account.Login.CheckoutAsGuestOrRegister")</h5>
                            </div>
                            <div class="card-body">
                                @await Component.InvokeAsync("TopicBlock", new { systemName = "CheckoutAsGuestOrRegister" })
                                <div class="row">
                                    <div class="col-12 col-lg-6 d-grid mb-lg-0 mb-3">
                                        <button type="button" class="btn btn-secondary checkout-as-guest-button rounded-0 btn-lg text-uppercase" onclick="location.href='@Url.RouteUrl("Checkout")'">@T("Account.Login.CheckoutAsGuest")</button>
                                    </div>
                                    <div class="col-12 col-lg-6 d-grid">
                                        <button type="button" class="btn btn-danger register-button rounded-0 btn-lg text-uppercase" onclick="location.href='@registerUrl'">@T("Account.Register")</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="new-wrapper register-block card">
                            <div class="card-header">
                                <h5 class="mb-0">@T("Account.Login.NewCustomer")</h5>
                            </div>
                            <div class="card-body">
                                <div class="fs-6"> @T("Account.Login.NewCustomerText") </div>
                                <div class="mt-3 d-grid col-12 col-sm-6 mx-auto">
                                    <button type="button" class="btn btn-danger register-button rounded-0 text-uppercase btn-lg" onclick="location.href='@registerUrl'">@T("Account.Register")</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="col-12 col-md-6">
                    <div class="returning-wrapper card">
                        <form asp-route="Login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post">
                            <div class="card-header">
                                <h5 class="mb-0">@T("Account.Login.ReturningCustomer")</h5>
                            </div>
                            <div class="card-body">
                                @if (Model.UsernamesEnabled)
                                {
                                    <div class="row">
                                        <label asp-for="Username" class="col-12 col-lg-3 col-form-label"></label>
                                        <div class="col-12 col-lg-9 mb-3">
                                            <input asp-for="Username" class="username form-control" autofocus="autofocus" />
                                            <span asp-validation-for="Username"></span>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="row">
                                        <label asp-for="Email" class="col-12 col-lg-3 col-form-label"></label>
                                        <div class="col-12 col-lg-9 mb-3">
                                            <input asp-for="Email" class="email form-control" autofocus="autofocus" />
                                            <span asp-validation-for="Email"></span>
                                        </div>
                                    </div>
                                }
                                <div class="row">
                                    <label asp-for="Password" class="col-12 col-lg-3 col-form-label"></label>
                                    <div class="col-12 col-lg-9 mb-3">
                                        <input asp-for="Password" class="password form-control" />
                                        <span asp-validation-for="Password"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12 col-lg-9 offset-md-0 offset-lg-3 remember-wrapper mb-3">
                                        <div class="form-check">
                                            <input asp-for="RememberMe" class="form-check-input" />
                                            <label for="RememberMe" class="form-check-label" asp-for="RememberMe"></label>
                                            <span class="forgot-password float-end">
                                                <a asp-route="PasswordRecovery" class="fs-6">@T("Account.Login.ForgotPassword")</a>
                                            </span>
                                        </div>
                                    </div>
                                </div>

                                @if (Model.DisplayCaptcha)
                                {
                                    <div class="row">
                                        <div class="col-12 col-lg-9 offset-md-0 offset-lg-3 mb-3">
                                            <div class="captcha-box">
                                                <nop-captcha />
                                            </div>
                                        </div>
                                    </div>
                                }

                                <div class="row">
                                    <div class="col-12 col-lg-5 offset-md-0 offset-lg-3">
                                        <div class="d-grid">
                                            <input class="btn btn-primary btn-lg login-button text-uppercase rounded-0" type="submit" value="@T("Account.Login.LoginButton")" />
                                        </div>
                                    </div>
                                </div>

                                <div asp-validation-summary="ModelOnly" class="alert alert-danger mt-3 mb-0">@T("Account.Login.Unsuccessful")</div>

                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="external-authentication">
            @await Component.InvokeAsync("ExternalMethods", "ExternalAuthentication")
        </div>
        @*@await Component.InvokeAsync("TopicBlock", new { systemName = "LoginRegistrationInfo" })*@
    </div>
</div>